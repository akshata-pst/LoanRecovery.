# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$(document).ready ->
  $('.nav li a').click (e) ->
    $('.nav li').removeClass 'active'
    $parent = $(this).parent()
    if !$parent.hasClass('active')
      $parent.addClass 'active'
    e.preventDefault()
    return
  return


jQuery ($) ->
  $('td[data-link]').click ->
    window.location = $(this).data('link')
    return
  return



jQuery ->
      table =  $('#loan_table').dataTable()
    alert ('vfder')
        sPaginationType: "full_numbers"
    select: true

jQuery ->

		stateObject = 
  'Maharashtra':
    'Solapur': [
      'Shivaji Chowk'
      'Park Chowk'
    ]
    'Pune': [
      'Kothrud'
      'Baner'
    ]
  'Gujarat':
    'Surat': [
      'Dhyanchand Road'
      'Rail Lines'
    ]
    'Ahmedabad': [
      'Airport'
      'Bus stand'
    ]

window.onload = ->
  stateSel = document.getElementById('stateSel')
  countySel = document.getElementById('countySel')
  citySel = document.getElementById('citySel')
  for state of stateObject
    stateSel.options[stateSel.options.length] = new Option(state, state)

  stateSel.onchange = ->
    countySel.length = 1
    # remove all options bar first
    citySel.length = 1
    # remove all options bar first
    if @selectedIndex < 1
      return
    # done   
    for county of stateObject[@value]
      countySel.options[countySel.options.length] = new Option(county, county)
    return

  stateSel.onchange()
  # reset in case page is reloaded

  countySel.onchange = ->
    citySel.length = 1
    # remove all options bar first
    if @selectedIndex < 1
      return
    # done   
    cities = stateObject[stateSel.value][@value]
    i = 0
    while i < cities.length
      citySel.options[citySel.options.length] = new Option(cities[i], cities[i])
      i++
    return

  return

# ---
# generated by js2coffee 2.1.0   


